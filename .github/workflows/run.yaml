name: Generate Opera Proxy Clash Config

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */12 * * *'  # 每12小时运行一次

jobs:
  generate-config:
    runs-on: ubuntu-latest
    
    steps:
      - name: Download opera-proxy
        run: |
          DOWNLOAD_URL=$(curl -s https://api.github.com/repos/Snawoot/opera-proxy/releases/latest | grep "browser_download_url.*linux_amd64" | cut -d '"' -f 4)
          curl -L $DOWNLOAD_URL -o opera-proxy
          chmod +x opera-proxy
      
      - name: Generate proxy list and convert to Clash format
        id: proxy-gen
        run: |
          # 运行命令并捕获输出
          OUTPUT=$(./opera-proxy -country EU -list-proxies)
          
          # 解析输出
          PROXY_LOGIN=$(echo "$OUTPUT" | grep "Proxy login:" | cut -d ' ' -f 3)
          PROXY_PASS=$(echo "$OUTPUT" | grep "Proxy password:" | cut -d ' ' -f 3)
          
          # 创建 Clash 配置文件
          echo "proxies:" > clash_config.yml
          
          # 处理每个代理服务器
          echo "$OUTPUT" | grep -E "^[^,]+,[^,]+,[^,]+$" | while IFS=, read -r host ip port; do
            # 获取域名的前三个字母
            NAME_PREFIX=$(echo $host | cut -c1-3)
            
            # 添加代理配置
            cat >> clash_config.yml << EOF
          - name: ${NAME_PREFIX}
            type: http
            server: ${host}
            port: ${port}
            username: ${PROXY_LOGIN}
            password: ${PROXY_PASS}
            tls: true
            skip-cert-verify: false
            sni: ${host}
          EOF
          done

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: proxy-${{ github.run_number }}
          release_name: Proxy Config ${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload Config File
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./clash_config.yml
          asset_name: clash_config.yml
          asset_content_type: application/yaml
