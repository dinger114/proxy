name: Generate Opera Proxy Clash Config

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */12 * * *'  # 每12小时运行一次

jobs:
  generate-proxy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download opera-proxy
        run: |
          wget https://github.com/Snawoot/opera-proxy/releases/download/v1.11.2/opera-proxy.linux-amd64 -O opera-proxy
          chmod +x opera-proxy

      - name: Generate proxy list and create Clash config
        id: proxy-gen
        run: |
          # 运行命令并捕获输出
          OUTPUT=$(./opera-proxy -country EU -list-proxies)
          
          # 解析输出
          PROXY_LOGIN=$(echo "$OUTPUT" | grep "Proxy login:" | cut -d ' ' -f 3)
          PROXY_PASS=$(echo "$OUTPUT" | grep "Proxy password:" | cut -d ' ' -f 3)
          
          # 创建 Clash 配置文件
          echo "proxies:" > clash-config.yml
          
          # 处理每个代理服务器
          echo "$OUTPUT" | grep -E "^[^,]+,[^,]+,[^,]+$" | while IFS=, read -r host ip port; do
            # 获取域名的前三个字母
            NAME_PREFIX=$(echo $host | cut -c1-3)
            
            # 添加代理配置
            cat >> clash-config.yml << EOF
          - name: ${NAME_PREFIX}
            type: http
            server: ${host}
            port: ${port}
            username: ${PROXY_LOGIN}
            password: ${PROXY_PASS}
            tls: true
            skip-cert-verify: false
            sni: ${host}
          EOF
          done

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: "Proxy Config ${{ github.run_number }}"
          tag_name: "proxy-${{ github.run_number }}"
          files: clash-config.yml
          draft: false
          prerelease: false
          body: |
            Proxy configuration updated at ${{ github.event.repository.updated_at }}
